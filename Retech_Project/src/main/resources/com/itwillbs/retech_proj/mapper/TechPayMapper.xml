<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 
[ 엑세스토큰 및 핀테크 사용자 정보를 관리할 bank_user_info 테이블 정의 ]
CREATE TABLE techpay_user_info (
	id VARCHAR(100) PRIMARY KEY,
	access_token VARCHAR(400) UNIQUE,
	refresh_token VARCHAR(400) UNIQUE,
	user_seq_no VARCHAR(10) UNIQUE,
	user_ci VARCHAR(100) UNIQUE,
	fintech_use_num VARCHAR(30) UNIQUE,
	FOREIGN KEY (id) REFERENCES member(member_id) ON DELETE CASCADE
);
-->     
<mapper namespace="com.itwillbs.retech_proj.mapper.TechPayMapper"> 

	<!-- 핀테크 사용자 정보 조회 - SELECT -->
	<!-- member 테이블 정보도 함께 조회하여 이름을 가져오기 -->
	<select id="selectBankUserInfo" resultType="bankToken">
		SELECT *
		FROM techpay_user_info AS b
		LEFT JOIN member AS m
		ON b.id = m.member_id
		WHERE b.id = #{id}
	</select>

	<!-- 테크페이 비밀번호 정보 조회 - SELECT -->
	<select id="selectPayPwd">
		SELECT pay_pwd
		FROM techpay_pay_info
		WHERE id = #{id}
	</select>

	<!-- 테크페이 잔액 정보 조회 - SELECT -->
	<select id="selectPayBalance">
		SELECT pay_balance
		FROM techpay_pay_info
		WHERE id = #{id}	
	</select>
	
	<!-- 테크페이 비밀번호 정보 저장 - UPDATE -->
	<update id="updatePayPwd">
		UPDATE techpay_pay_info
		SET
			pay_pwd = #{pay_pwd}
		WHERE
			id = #{id}	
	</update>

	<!-- 사용자 엑세스 토큰 정보 조회 - SELECT -->
	<!-- 전달받은 Map 객체 내의 "id" 속성을 활용하여 아이디 조회 -->
	<select id="selectId" resultType="string">
		SELECT id
		FROM techpay_user_info
		WHERE id = #{id}	
	</select>

	<!-- 핀테크 엑세스토큰 정보 등록 - INSERT -->
	<insert id="insertAccessToken">
		INSERT INTO techpay_user_info
		VALUES (
			#{id}
			, #{token.access_token}
			, #{token.refresh_token}
			, #{token.user_seq_no}
			, #{token.user_ci}
			, #{token.fintech_use_num}   -- 임시(사용자 계좌가 1개라는 전제 하에 계좌번호 대신 핀테크 사용자 번호 저장)
		)
	</insert>
	
	<!-- 핀테크 엑세스토큰 정보 갱신 - UPDATE -->
	<update id="updateAccessToken">
		UPDATE techpay_user_info
		SET
			access_token = #{token.access_token}
			, refresh_token = #{token.refresh_token}
		WHERE
			id = #{id}	
	</update>
	
	<!-- 테크페이 초기 정보 조회 - SELECT -->
	<select id="selectPayInfoId" resultType="string">
		SELECT id
		FROM techpay_pay_info
		WHERE id = #{id}		
	</select>	

	<!-- 테크페이 초기 정보 저장 - INSERT -->
	<insert id="insertPayInfo">
		INSERT INTO techpay_pay_info (id, pay_balance)
		VALUES (
			#{id}
			, 0 			
		)
	</insert>

	<!-- 테크페이 사용 목록 불러오기 --> 	
	<select id="selectPayHistory" resultType="map">
		SELECT *
		FROM techpay_history
		WHERE id = #{pay_id}
		<if test="pay_history_type != null and !pay_history_type.equals('')">
			AND techpay_type = #{pay_history_type}
		</if>
		<if test="start_date != null and !start_date.equals('') and end_date != null and !end_date.equals('')">
			AND DATE(techpay_tran_dtime) BETWEEN #{start_date} AND #{end_date}
		</if>
		ORDER BY techpay_tran_dtime DESC
		<if test="startRow != null and !startRow.equals('') and listLimit != null and !listLimit.equals('')">
			LIMIT #{startRow}, #{listLimit}
		</if>		
	</select>
	
	<!-- 테크페이 사용 목록 개수 세기(페이징) --> 
	<select id="selectPayHistoryCount" resultType="int">
		SELECT COUNT(*)
		FROM techpay_history
		WHERE id = #{pay_id}
		<if test="pay_history_type != null and !pay_history_type.equals('')">
			AND techpay_type = #{pay_history_type}
		</if>
		<if test="start_date != null and !start_date.equals('') and end_date != null and !end_date.equals('')">
			AND DATE(techpay_tran_dtime) BETWEEN #{start_date} AND #{end_date}
		</if>	
	</select>
	
	
	<!-- 테크페이 잔액 업데이트 - UPDATE -->
	<update id="updatePayBalance">
		UPDATE techpay_pay_info
		SET
			<choose>
				<when test="techpay_type == 1 or techpay_type == 4">
					pay_balance  = pay_balance + #{tran_amt}
				</when>
				<when test="techpay_type == 2 or techpay_type == 3">
					pay_balance  = pay_balance - #{tran_amt}
				</when>
			</choose>
		WHERE
			id = #{id}	
	</update>
		
	
	<!-- 관리자 엑세스토큰 조회 - SELECT -->
	<select id="selectAdminAccessToken" resultType="bankToken">
		SELECT * 
		FROM techpay_user_info
		WHERE id = 'payadmin@gmail.com';
	</select>
	
	
	<!-- 테크페이 내역 DB에 추가 - INSERT -->
	<insert id="insertPayHistory">
		INSERT INTO techpay_history
		VALUES (
			#{techpay_idx}
		    , #{tran_amt}
		    , #{techpay_tran_dtime}
		    , #{pay_balance}
		    , #{techpay_type}
		    , #{id}
		    , #{trade_idx}
		);
	</insert>


	<!-- 결제결과 불러오기 -->
	<select id="selectPaymentsResult" resultType="map">
		SELECT 
		    th.*,
		    t.*,
		    p.pd_subject,
		    p.pd_idx
		FROM 
		    techpay_history th
		JOIN 
		    trade t
		    ON th.id = t.trade_buyer_id
		JOIN 
		    product p
		    ON th.trade_idx = p.pd_idx
		WHERE 
		    th.id = #{id}
		    AND th.trade_idx = #{trade_idx};
	</select>
	
	<!-- 해당 상품 거래 상태 '결제완료'로 업데이트 -->
	<update id="updateTradeStatus">
		UPDATE trade
			SET trade_status = 2
		WHERE
			trade_buyer_id = #{id}
			AND trade_idx = #{trade_idx};
	
	</update>

</mapper>